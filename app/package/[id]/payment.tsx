import { View, Text, StyleSheet, Pressable } from 'react-native';
import { useLocalSearchParams, useRouter } from 'expo-router';
import { SafeAreaView } from 'react-native-safe-area-context';
import Colors from '@/constants/Colors';
import { spacing, fontSizes } from '@/constants/Layout';
import { ChevronLeft } from 'lucide-react-native';
import QRCode from 'react-native-qrcode-svg';

export default function PackagePaymentScreen() {
  const { id, picker } = useLocalSearchParams();
  const router = useRouter();

  // TODO: Fetch payment details from API
  const paymentDetails = {
    amount: 25.00,
    currency: 'USD',
    paymentId: 'PAY-1234567890',
    qrData: 'payment-qr-data-here', // This should be generated by your backend
  };

  return (
    <SafeAreaView style={styles.container} edges={['top']}>
      <View style={styles.header}>
        <Pressable onPress={() => router.back()} style={styles.backButton}>
          <ChevronLeft color={Colors.primary.DEFAULT} size={24} />
        </Pressable>
        <Text style={styles.title}>Payment</Text>
      </View>

      <View style={styles.content}>
        <View style={styles.amountContainer}>
          <Text style={styles.amountLabel}>Amount to Pay</Text>
          <Text style={styles.amount}>
            ${paymentDetails.amount.toFixed(2)}
          </Text>
          <Text style={styles.amountSubtext}>
            Scan the QR code below to complete payment
          </Text>
        </View>

        <View style={styles.qrContainer}>
          <QRCode
            value={paymentDetails.qrData}
            size={200}
            color={Colors.primary.DEFAULT}
            backgroundColor={Colors.white}
          />
        </View>

        <View style={styles.infoContainer}>
          <Text style={styles.infoText}>
            Payment ID: {paymentDetails.paymentId}
          </Text>
        </View>

        <Pressable 
          style={styles.confirmButton}
          onPress={() => {
            // TODO: Implement payment confirmation
            router.push(`/package/${id}/chat`);
          }}
        >
          <Text style={styles.confirmButtonText}>
            I've Completed the Payment
          </Text>
        </Pressable>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.background,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: spacing.lg,
    paddingVertical: spacing.md,
    borderBottomWidth: 1,
    borderBottomColor: Colors.gray[200],
  },
  backButton: {
    marginRight: spacing.md,
  },
  title: {
    flex: 1,
    fontFamily: 'Poppins-SemiBold',
    fontSize: fontSizes.lg,
    color: Colors.primary.DEFAULT,
  },
  content: {
    flex: 1,
    padding: spacing.lg,
    alignItems: 'center',
  },
  amountContainer: {
    alignItems: 'center',
    marginBottom: spacing.xl,
  },
  amountLabel: {
    fontFamily: 'Poppins-Medium',
    fontSize: fontSizes.md,
    color: Colors.gray[600],
    marginBottom: spacing.xs,
  },
  amount: {
    fontFamily: 'Poppins-Bold',
    fontSize: fontSizes.xxl,
    color: Colors.primary.DEFAULT,
    marginBottom: spacing.xs,
  },
  amountSubtext: {
    fontFamily: 'Poppins-Regular',
    fontSize: fontSizes.sm,
    color: Colors.gray[500],
  },
  qrContainer: {
    padding: spacing.lg,
    backgroundColor: Colors.white,
    borderRadius: 16,
    shadowColor: Colors.black,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 3,
    marginBottom: spacing.xl,
  },
  infoContainer: {
    marginBottom: spacing.xl,
  },
  infoText: {
    fontFamily: 'Poppins-Regular',
    fontSize: fontSizes.sm,
    color: Colors.gray[600],
  },
  confirmButton: {
    backgroundColor: Colors.primary.DEFAULT,
    paddingVertical: spacing.md,
    paddingHorizontal: spacing.xl,
    borderRadius: 12,
    width: '100%',
  },
  confirmButtonText: {
    fontFamily: 'Poppins-Medium',
    fontSize: fontSizes.md,
    color: Colors.white,
    textAlign: 'center',
  },
});